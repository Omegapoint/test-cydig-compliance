#
# common compliance template workflow that calls checkers to get compliance state
#
# any parameters global to the team could be entered here, otherwise override parameters from the workflow
# calling this template
name: Compliance template
run-name: ${{ github.actor }} is testing out github actions
permissions:
  contents: read
  pages: write
  id-token: write
  
env:
  githubOrg: Omegapoint #Change: your github organization
  complianceRepo: test-cydig-compliance  #Change: name of repository containing compliance-template.yml and cydigConfig.json
  configFile: cydigConfig.json 
  disableWarningUsersInProd: false #Change: true/false
  updateKey: ${{ secrets.CYDIG_API_KEY }}

on:
  workflow_call:
    inputs:
      threatModelingDate:
        type: string
      pentestDate:
        type: string

jobs:
  Repository-Scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout self
        uses: actions/checkout@v4

      - name: Set Input Variables
        run: |
          echo "pathCydigConfig=${{ env.complianceRepo }}/${{ env.configFile }}"  >> $GITHUB_ENV
          echo "pathComplianceRepo=${{ env.githubOrg }}/${{ env.complianceRepo }}"  >> $GITHUB_ENV
          echo "threatModelingDate=${{ inputs.threatModelingDate }}" >> $GITHUB_ENV
          echo "pentestDate=${{ inputs.pentestDate }}" >> $GITHUB_ENV
      
      - name: Checkout compliance
        uses: actions/checkout@v4
        with:
           repository:  ${{ env.pathComplianceRepo }}
           path: ${{ env.complianceRepo }}

      - name: 'Azure CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Run Azure Compliance Controls'
        uses: Omegapoint/cydig-azure-compliance-action@v1
        with:
          subscription: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          cydigConfigPath: ${{ env.pathCydigConfig }}

      - name: 'Run Compliance Controls'
        uses:  Omegapoint/cydig-compliance-action@v1
        with:
          PAT-token: ${{ secrets.MY_GITHUB_PAT }}
          cydigConfigPath: ${{ env.pathCydigConfig }}
    
      - name: 'Run Upload Compliance State'
        id: upload
        uses: Omegapoint/upload-compliance-state-action@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          cydigConfigPath: ${{ env.pathCydigConfig }}

      - name: 'Get Upload Action results'
        run: |
          echo "${{ steps.upload.outputs.readme-badges }}" >> README_badges.txt
          
      - name: 'Upload Action results to Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: README-badges-URLS
          path: ${{ github.workspace }}/README_badges.txt